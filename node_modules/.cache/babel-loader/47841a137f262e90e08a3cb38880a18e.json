{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sergerigaudjoseph/Desktop/SUCCESS ITNOJ/SCHOOL/SS GEC/Midterm Chatroom Project/Chatroom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergerigaudjoseph/Desktop/SUCCESS ITNOJ/SCHOOL/SS GEC/Midterm Chatroom Project/Chatroom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from '../config/fbConfig';\nimport { getAuth } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\"; // import React, {useState} from \"react\";\n\nimport { getFirestore } from 'firebase/firestore';\nexport var signOut = function signOut() {\n  firebase.auth().signOut().then(function () {\n    dispatch({\n      type: 'SIGNOUT_SUCCESS'\n    });\n  });\n};\nexport var LogInWithGoogle = function LogInWithGoogle() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(provider).then(function () {\n    UpdateProfileforGoogle(); // window.location = \"index.html\";\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorMessage = error.message;\n    create_alert(\"error\", errorMessage);\n  });\n};\n\nvar UpdateProfileforGoogle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var auth, user, email, Name, Username;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            auth = getAuth();\n            user = auth.currentUser;\n\n            if (user) {\n              email = user.email;\n              Name = \"\";\n              Username = \"\";\n\n              if (email.indexOf('@') !== -1) {\n                Name = email.split('@')[0];\n                Username = Name[0] + Name[1];\n                Username = Username.toUpperCase();\n              }\n            } else {\n              create_alert(\"No current User\");\n            }\n\n            firebase.auth().onAuthStateChanged(function (user) {\n              if (user) {\n                var db = getFirestore();\n                setDoc(doc(db, \"Users\", user.uid), {\n                  Name: Name,\n                  Username: Username\n                }).then(function () {\n                  create_alert(\"Success\", \"Your Profile is updated!\");\n                }).catch(function (error) {\n                  var errorMessage = error.message;\n                  create_alert(\"An error has occured\", errorMessage);\n                });\n              } else {\n                create_alert(\"User is not registered !\");\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function UpdateProfileforGoogle() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var LogIn = function LogIn(Credentials) {\n  var email = Credentials.Email;\n  var password = Credentials.Password;\n  firebase.auth().signInWithEmailAndPassword(email, password).then(function () {// console.log(\"Congratulation\", \"You are logged in\")\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorMessage = error.message;\n    create_alert(\"error\", errorMessage);\n    Credentials.Email = \"\";\n    Credentials.Password = \"\";\n  });\n};\nexport var signUp = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newUser) {\n    var email, password;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = newUser.Email;\n            password = newUser.Password;\n            _context2.next = 4;\n            return firebase.auth().createUserWithEmailAndPassword(email, password).then(function (resp) {\n              UpdateProfile(newUser);\n            }).then(function () {\n              create_alert(\"success\", \"You can sign in  right now!\");\n              newUser.Firstname = \"\";\n              newUser.Lastname = \"\";\n              newUser.email = \"\";\n              newUser.password = \"\";\n            }).catch(function (error) {\n              var errorMessage = error.message;\n              create_alert(\"error\", errorMessage);\n              newUser.Firstname = \"\";\n              newUser.Lastname = \"\";\n              newUser.email = \"\";\n              newUser.password = \"\";\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function signUp(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar UpdateProfile = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newUser) {\n    var Name, Username;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // console.log(firebase)\n            Name = newUser.Firstname + ' ' + newUser.Lastname.toUpperCase();\n            Username = newUser.Firstname[0] + newUser.Lastname[0];\n            firebase.auth().onAuthStateChanged(function (user) {\n              if (user) {\n                var db = getFirestore();\n                setDoc(doc(db, \"Users\", user.uid), {\n                  Name: Name,\n                  Username: Username\n                }).then(function () {\n                  create_alert(\"Success\", \"Your Profile is updated!\");\n                }).catch(function (error) {\n                  var errorMessage = error.message;\n                  create_alert(\"An error has occured\", errorMessage);\n                });\n              } else {\n                create_alert(\"User is not registered !\");\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function UpdateProfile(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction create_alert(type, message) {\n  var alertarea = document.getElementById('custom-alert');\n\n  if (type === \"success\") {\n    var str_html = \"<div class='alert alert-success alert-dismissible fade show' role='alert'><strong>Success! </strong>\" + message + \"<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>\";\n    alertarea.innerHTML = str_html;\n  } else if (type === \"error\") {\n    str_html = \"<div class='alert alert-danger alert-dismissible fade show' role='alert'><strong>Error! </strong>\" + message + \"<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>\";\n    alertarea.innerHTML = str_html;\n  }\n}","map":{"version":3,"sources":["/Users/sergerigaudjoseph/Desktop/SUCCESS ITNOJ/SCHOOL/SS GEC/Midterm Chatroom Project/Chatroom/src/Component/Auth/authentification.js"],"names":["firebase","getAuth","doc","setDoc","getFirestore","signOut","auth","then","dispatch","type","LogInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","UpdateProfileforGoogle","catch","error","errorMessage","message","create_alert","user","currentUser","email","Name","Username","indexOf","split","toUpperCase","onAuthStateChanged","db","uid","LogIn","Credentials","Email","password","Password","signInWithEmailAndPassword","signUp","newUser","createUserWithEmailAndPassword","resp","UpdateProfile","Firstname","Lastname","alertarea","document","getElementById","str_html","innerHTML"],"mappings":"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","sourcesContent":["import firebase from '../config/fbConfig'\nimport { getAuth } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\"; \n// import React, {useState} from \"react\";\nimport { getFirestore } from 'firebase/firestore'\n\n\nexport const signOut = () => {\n    \n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n}\n\nexport const LogInWithGoogle = () => {\n   \n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n        .then(function () {\n            UpdateProfileforGoogle()\n            // window.location = \"index.html\";\n        })\n        .catch(function (error) {\n            // Handle Errors here.\n            var errorMessage = error.message;\n            create_alert(\"error\", errorMessage);\n        });\n}\n\nconst UpdateProfileforGoogle = async () => {\n\n    const auth = getAuth()\n    const user = auth.currentUser;\n\n    if (user) {\n        var email = user.email\n        var Name = \"\"\n        var Username = \"\"\n\n        if (email.indexOf('@') !== -1) {\n            Name = email.split('@')[0];\n            Username = Name[0]+Name[1]\n            Username = Username.toUpperCase()\n            }\n            \n    } else {\n        create_alert(\"No current User\")\n    }\n\n\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            const db = getFirestore();\n             setDoc(doc(db, \"Users\", user.uid),\n              { \n                  \n                Name,\n                Username\n\n              }).then(function () {\n                create_alert(\"Success\", \"Your Profile is updated!\");\n              }).catch(function (error) {\n                var errorMessage = error.message;\n                create_alert(\"An error has occured\", errorMessage);\n              });\n        } else {\n            create_alert(\"User is not registered !\");\n        }\n      });\n}\n\n\nexport const LogIn = (Credentials) => {\n   \n    var email = Credentials.Email\n    var password = Credentials.Password\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(function () {\n            // console.log(\"Congratulation\", \"You are logged in\")\n        })\n        .catch(function (error) {\n            // Handle Errors here.\n            var errorMessage = error.message;\n            create_alert(\"error\", errorMessage);\n            Credentials.Email = \"\";\n            Credentials.Password = \"\";\n    });\n}\n\nexport const signUp = async (newUser) => {\n    var email = newUser.Email\n    var password = newUser.Password\n\n    await firebase.auth().createUserWithEmailAndPassword(\n        email, \n        password\n        ).then((resp) => {\n           UpdateProfile(newUser)\n        }).then(function () {\n            create_alert(\"success\", \"You can sign in  right now!\");\n            newUser.Firstname = \"\";\n            newUser.Lastname = \"\";\n            newUser.email = \"\";\n            newUser.password = \"\";\n        })\n        .catch(function (error) {\n            var errorMessage = error.message;\n            create_alert(\"error\", errorMessage);\n            newUser.Firstname = \"\";\n            newUser.Lastname = \"\";\n            newUser.email = \"\";\n            newUser.password  = \"\";\n        });\n}\n\nconst UpdateProfile = async (newUser) => {\n    // console.log(firebase)\n    \n    var Name =  newUser.Firstname + ' ' + newUser.Lastname.toUpperCase();\n    var Username = newUser.Firstname[0] + newUser.Lastname[0];\n\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            const db = getFirestore();\n             setDoc(doc(db, \"Users\", user.uid),\n              { \n\n                  Name,\n                  Username\n\n              }).then(function () {\n                create_alert(\"Success\", \"Your Profile is updated!\");\n              }).catch(function (error) {\n                var errorMessage = error.message;\n                create_alert(\"An error has occured\", errorMessage);\n              });\n        } else {\n            create_alert(\"User is not registered !\");\n        }\n      });\n}\n\n\nfunction create_alert(type, message) {\n    var alertarea = document.getElementById('custom-alert');\n    if (type === \"success\") {\n        var str_html = \"<div class='alert alert-success alert-dismissible fade show' role='alert'><strong>Success! </strong>\" + message + \"<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>\";\n        alertarea.innerHTML = str_html;\n    }\n    else if (type === \"error\") {\n        str_html = \"<div class='alert alert-danger alert-dismissible fade show' role='alert'><strong>Error! </strong>\" + message + \"<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>\";\n        alertarea.innerHTML = str_html;\n    }\n}"]},"metadata":{},"sourceType":"module"}